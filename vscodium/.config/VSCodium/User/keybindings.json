// Place your key bindings in this file to override the defaults

// LEADER KEY = CTRL+SPACE
[
    // ********** FIND **********
    // find find
    {
        "key": "ctrl+space f f",
        "command": "actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    // find definition (goto definition)
    {
        "key": "ctrl+space f d",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    // find references
    {
        "key": "ctrl+space f r",
        "command": "references-view.findReferences",
        "when": "editorHasReferenceProvider"
    },
    // find usages (=references)
    {
        "key": "ctrl+space f u",
        "command": "references-view.findReferences",
        "when": "editorHasReferenceProvider"
    },
    // ********** GOTO **********
    // definition / declaration
    {
        "key": "ctrl+space g d",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    // ********** OPEN ********** 
    // file
    {
        "key": "ctrl+space o f",
        "command": "workbench.action.quickOpen"
    },
    // open open
    {
        "key": "ctrl+space o o",
        "command": "workbench.action.showCommands"
    },
    // open explorer
    {
        "key": "ctrl+space o e",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    // open search
    {
        "key": "ctrl+space o s",
        "command": "workbench.action.findInFiles"
    },
    // open git
    {
        "key": "ctrl+space o g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    // open extensions
    {
        "key": "ctrl+space o x",
        "command": "workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    // ********** COMMENT **********
    // comment add
    {
        "key": "ctrl+space c a",
        "command": "editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    // comment remove
    {
        "key": "ctrl+space c r",
        "command": "editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    // ********** REFACTOR **********
    // refactor rename
    {
        "key": "ctrl+space r r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    // default but decent
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
]
