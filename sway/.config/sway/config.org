#+TITLE: My sway config
#+AUTHOR: Arthur Fleck
#+DESCRIPTION: AF's personal sway config.
#+STARTUP: showeverything
#+OPTIONS: toc:2
#+PROPERTY: header-args:shell :tangle config

# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

* ToC :toc:
- [[#variables][Variables]]
  - [[#basics][Basics]]
  - [[#nord-colors][Nord Colors]]
  - [[#workspaces][Workspaces]]
- [[#autostart][Autostart]]
- [[#colors-and-ui][COLORS AND UI]]
  - [[#font][Font]]
  - [[#changing-colors][Changing Colors]]
  - [[#disable-title-bars][Disable Title Bars]]
  - [[#set-border-pixel-0-for-notifications-and-a-few-apps][Set ~border pixel 0~ for notifications (and a few apps)]]
  - [[#float--resize-etc-certain-windows][FLOAT / RESIZE etc. CERTAIN WINDOWS]]
  - [[#open-apps-on-specific-workspace][Open apps on specific workspace]]
- [[#output-configuration][Output configuration]]
- [[#idle-configuration][Idle configuration]]
- [[#input-configuration][Input configuration]]
- [[#key-bindings][Key bindings]]
  - [[#basics-1][Basics:]]
  - [[#moving-around][Moving around:]]
  - [[#workspaces-1][Workspaces:]]
  - [[#layout-stuff][Layout stuff:]]
  - [[#scratchpad][Scratchpad:]]
  - [[#scratchpad-custom][Scratchpad custom:]]
  - [[#other-2025-new][Other (2025 new):]]
  - [[#resizing-containers][Resizing containers:]]
  - [[#from-i3][from i3]]
- [[#status-bar][Status Bar:]]
  - [[#sway-default][sway default]]
  - [[#i3status-rs][i3status-rs]]
- [[#gaps][GAPS]]
  - [[#global][global]]
  - [[#per-workspace][per workspace]]
  - [[#manipulate-gaps-at-runtime][manipulate gaps at runtime]]
- [[#include][include]]

* Variables
** Basics
Logo key. Use Mod1 for Alt.

(left_win and left_alt are swapped via =keyd=)
#+begin_src shell
set $mod Mod4
set $alt Mod1
#+end_src

Home row direction keys, like vim
#+begin_src shell
set $left h
set $down j
set $up k
set $right l
#+end_src

Your preferred terminal emulator
#+begin_src shell
set $term alacritty
#+end_src

Your preferred application launcher
Note: pass the final command to swaymsg so that the resulting window can be opened
on the original workspace that the command was run on.
#+begin_src shell
set $menu dmenu_path | wmenu -i -f "HackNerdFont 12" -N "#3b4252" -n "#d8dee9" -S "#d08770" -s "#000000" | xargs swaymsg exec --
set $menu2 i3-dmenu-desktop --dmenu='dmenu -i -fn "HackNerdFont 12" -nb "#3b4252" -nf "#d8dee9" -sb "#d08770" -sf "#000000"'
#+end_src

** Nord Colors
https://www.nordtheme.com/docs/colors-and-palettes

#+begin_src shell
# Nord Polar Night
set $polar1 #2e3440
set $polar2 #3b4252
set $polar3 #434c5e
set $polar4 #4c566a

# Nord Snow Storm
set $snow1 #d8dee9
set $snow2 #e5e9f0
set $snow3 #eceff4

# Nord Frost
set $frost1 #8fbcbb
set $frost2 #88c0d0
set $frost3 #81a1c1
set $frost4 #5e81ac

# Nord Aurora
set $red    #bf616a
set $orange #d08770
set $yellow #ebcb8b
set $green  #a3be8c
set $lila   #b48ead
#+end_src

** Workspaces
[[https://www.nerdfonts.com/cheat-sheet][Icons Cheat Sheet]]

TODO workspace like " 1 " that starts with space does NOT work - why?
#+begin_src shell
set $ws1 "1  "
set $ws2 "2  "
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8  "
set $ws9 "9  "
set $ws10 "10"
#+end_src

* Autostart
TODO alternative to xfce4-power-manager
#+begin_src shell
exec --no-startup-id waybar
exec --no-startup-id blueman-applet
exec --no-startup-id emacs --daemon
exec --no-startup-id dunst
exec --no-startup-id megasync
exec --no-startup-id nm-applet
exec --no-startup-id firewall-applet
# syncthing 1.x
exec --no-startup-id syncthing -no-browser
# syncthing 2.x
exec --no-startup-id syncthing --no-browser

exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id "~/scripts/bb/licht.clj hi"
#+end_src

* COLORS AND UI
** Font
#+begin_src shell
font pango:HackNerdFont 9.0
#+end_src

** Changing Colors
Other than ~client.focused~, all values are the default ones.

#+begin_src shell

# class                 border  backgr. text    indicator child_border
client.focused          $polar1 $orange $polar4 $orange   $orange
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff


# default colors for reference
# ----------------------------

# # class                 border  backgr. text    indicator child_border
# client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
# client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
# client.unfocused        #333333 #222222 #888888 #292d2e   #222222
# client.urgent           #2f343a #900000 #ffffff #900000   #900000
# client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
#
# client.background       #ffffff

#+end_src

** Disable Title Bars
Setting border style to pixel eliminates title bars. See https://i3wm.org/docs/userguide.html#default_border

#+begin_src shell

# hide title bar for all windows
for_window [class="^.*"] border pixel 2

#+end_src

** Set ~border pixel 0~ for notifications (and a few apps)
scratchpad-like-apps via ~super+o~ might look better without border

#+begin_src shell
for_window [class="Xfce4-notifyd"] border pixel 0
for_window [class="io.github.celluloid_player.Celluloid"] border pixel 0
#for_window [class="Xfce4-appfinder"] border pixel 0
#for_window [class="Blueman-manager"] border pixel 0
#+end_src

** FLOAT / RESIZE etc. CERTAIN WINDOWS
are the classnames different in Wayland? About Firefox works, others here don't
--> use =wlprop | jq -r '.app_id'=

# enable floating mode for all XTerm windows
for_window [class="XTerm"] floating enable

# Make all urxvts use a 1-pixel border:
for_window [class="urxvt"] border pixel 1

# A less useful, but rather funny example:
# makes the window floating as soon as I change
# directory to ~/work
for_window [title="x200: ~/work"] floating enable

# Move floating container to the center of all outputs -> not what I wanted :)
bindsym $mod+c move absolute position center
# ok
for_window [class="Blueman-manager"] move position mouse

# EXAMPLE how to combine stuff
#for_window [title="Error" class="Lxpolkit"] kill; floating enable; border none

#+begin_src shell
for_window [app_id="xfce4-appfinder"] floating enable
#for_window [app_id="xfce4-appfinder"] border pixel 5
for_window [app_id="xfce4-appfinder"] resize set 800 600
for_window [app_id="xfce4-appfinder"] move position center

for_window [app_id="xfce4-about"] floating enable
for_window [app_id="xfce4-about"] resize set 800 600
for_window [app_id="xfce4-about"] move position center

for_window [app_id="blueman-manager"] floating enable
for_window [app_id="blueman-manager"] resize set 640 480
for_window [app_id="blueman-manager"] move position center

for_window [title="About Mozilla Firefox"] floating enable

for_window [app_id="org.pulseaudio.pavucontrol"] floating enable
for_window [app_id="org.pulseaudio.pavucontrol"] resize set 800 600
for_window [app_id="org.pulseaudio.pavucontrol"] move position center

for_window [app_id="wdisplays"] floating enable
for_window [app_id="wdisplays"] resize set 1024 768
for_window [app_id="wdisplays"] move position center
#+end_src

** Open apps on specific workspace
This is a bit of a mess on =Wayland=, because some apps don't have the class,
others are missing the app_id etc.

#+begin_src shell
assign [app_id="firefox"] $ws2
assign [app_id="qbittorrent"] $ws7
assign [class="Brave-browser"] $ws8
assign [app_id="KeePassXC"] $ws9
assign [app_id="org.gnome.SystemMonitor"] $ws9
#+end_src

* Output configuration
Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#+begin_src shell
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#+end_src

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

[[https://fedoramagazine.org/how-to-setup-multiple-monitors-in-sway/][link explaining the "math"]] or simply =man sway-output=
 x --->
y
.
.
.
start at the origin and you move 100 pixels to the right and 80 pixels down,
your coordinates will be (100, 80)

get display names and available resolutions: =swaymsg -t get_outputs=
also checkin =wdisplays= gui app to test/get position and scale values easily,
sadly doesnt allow to save the settings like =arandr=
#+begin_src shell
output HDMI-A-2 position 0 0 resolution 2560x1080
output eDP-1 position 426 1080 resolution 2560x1600 scale 1.5
#+end_src

* TODO Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

* TODO Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

instead of =input *=, example for using different input types https://github.com/Crandel/home/blob/master/.config/sway/config#L394
#+begin_src shell
input type:keyboard {
    xkb_layout "de"
    xkb_numlock enabled
}
#+end_src

* Key bindings
** Basics:
#+begin_src shell
# Start a terminal
bindsym $mod+Return exec $term
bindsym $mod+Shift+Return exec $term

# Kill focused window
bindsym $mod+q kill
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+p exec $menu2
bindsym $mod+Shift+p exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#+end_src

** Moving around:
#+begin_src shell
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#+end_src

** Workspaces:
#+begin_src shell
# Switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
#+end_src

** Layout stuff:
#+begin_src shell
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+z splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+d layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+Mod1+p focus parent
#+end_src

** Scratchpad:
#+begin_src shell
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#+end_src

** Scratchpad custom:
=exec= instead of =exec_always= should prolly used for all here - else multiple scratchpad after a cfg reload

also apparently wayland does *not* have window titles - only X11 - so not sure how filtering by it works here

*** main one
gpt says resize and move position only work when floating is enabled
#+begin_src shell
# the main scratchpad like on dwm; so i don't have to manually move it first and then cycle through the stack if multiple pads
for_window [title="dwm-scratchpad"] floating enable, move to scratchpad
exec_always alacritty --title "dwm-scratchpad"
# Show only that specific scratchpad terminal
bindsym $mod+s [title="dwm-scratchpad"] scratchpad show, resize set 800 600, move position center
bindsym $mod+u [title="dwm-scratchpad"] scratchpad show, resize set 800 600, move position center
bindsym $mod+F9 [title="dwm-scratchpad"] scratchpad show, resize set 800 600, move position center
#+end_src
*** htop
#+begin_src shell
for_window [title="htop-scratchpad"] floating enable, move to scratchpad
exec_always alacritty --title "htop-scratchpad" -e htop
bindsym $mod+F10 [title="htop-scratchpad"] scratchpad show, resize set 800 600, move position top-left
#+end_src
*** more?
#+begin_src shell

# Move Emacs with title "emacs-scratchpad" to scratchpad automatically
#for_window [title="emacs-scratchpad"] floating enable, move to scratchpad
# Launch Emacs with the special title
#exec_always emacsclient -c --title "emacs-scratchpad"
#bindsym $mod+i [title="emacs-scratchpad"] scratchpad show, resize set 1000 800, move positon center
#bindsym $mod+F10 [title="emacs-scratchpad"] scratchpad show, resize set 1000 800, move positon center

#+end_src

** Other (2025 new):
#+begin_src shell
bindsym $mod+Shift+o exec rofi -show drun

# TODO evaluate this script
bindsym $mod+Shift+w exec ~/scripts/sway-window-switcher.sh
# custom script better this shows too much
bindsym $mod+x exec rofi -terminal '$term' -modes window -show window

bindsym $mod+$alt+l exec swaylock --color 000000

bindsym $mod+b exec killall waybar || waybar

bindsym $mod+$alt+h exec dunstctl history-pop
bindsym $mod+$alt+k exec dunstctl close-all
bindsym $mod+$alt+w exec ~/scripts/bb/weather.clj dunst
#+end_src

** Resizing containers:
#+begin_src shell
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 50px
    bindsym $down resize grow height 50px
    bindsym $up resize shrink height 50px
    bindsym $right resize grow width 50px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#+end_src

** from i3
Auswahl der wichtigsten Keybindings

*** audio
https://faq.i3wm.org/question/3747/enabling-multimedia-keys/?answer=3759#post-id-3759
https://askubuntu.com/questions/794403/media-keys-on-macbook-pro-and-i3

#+begin_src shell
# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
#bindsym XF86AudioPause exec playerctl pause
#bindsym XF86AudioNext exec playerctl next
#bindsym XF86AudioPrev exec playerctl previous
#+end_src

*** Workspace
#+begin_src shell
workspace_auto_back_and_forth yes

bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth

bindsym $mod+period move workspace to output down
#+end_src

*** Interactive mode: scripts using dmenu for user interaction
TODO lots of them don't work, because of their dmenu dependency

#+begin_src shell
set $mode_space SPC: [a]ll-search [c]hange-settings [e]moji [g]search [r]un-script
set $mode_settings CHANGE SETTINGS: [b]luetooth [l]icht [s]creen-config rand-[w]allpaper
bindsym Mod1+space mode "$mode_space"

mode "$mode_space" {
    bindsym a exec "~/scripts/bb/search.clj --select-provider"; mode "default"
    bindsym e exec "~/.config/i3/dmenuunicode"; mode "default"
    bindsym g exec "~/scripts/bb/search.clj"; mode "default"
    bindsym r exec "~/scripts/bb/run_script.clj"; mode "default"

    bindsym c mode "$mode_settings"

    bindsym Escape mode "default"
}

mode "$mode_settings" {
    bindsym b exec blueman-manager; mode "default"
    bindsym l exec "~/scripts/bb/licht.clj"; mode "default"
    bindsym s exec screen_config; mode "default"
    bindsym w exec "$HOME/scripts/bb/set_random_wallpaper.clj"; mode "default"

    bindsym Escape mode "default"
}
#+end_src

*** TODO (waybar should use whole width while in a mode to display the help) Launch applications with $mod+o
#+begin_src shell
set $mode_launcher Open:\n\n[a]ppfinder [b]luetooth [B]rowser [c]alc [e]macs\n\n[f]ile-manager [k]eepass [o]pen [p]avucontrol [s]ystem-monitor\n\n[q]bittorrent bra[v]e firefo[x]

bindsym $mod+o exec notify-send -t 30000 -u low -i keyboard "$mode_launcher"; mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym a exec xfce4-appfinder; mode "default"; exec dunstctl close
    bindsym b exec blueman-manager; mode "default"; exec dunstctl close
    bindsym c exec rofi -show calc -modi calc -no-show-match -no-sort; mode "default"; exec dunstctl close
    bindsym e exec emacsclient --create-frame --alternate-editor="vim"; mode "default"; exec dunstctl close
    bindsym f exec thunar; mode "default"; exec dunstctl close
    bindsym k exec keepassxc; mode "default"; exec dunstctl close
    bindsym o exec rofi -show drun; mode "default"; exec dunstctl close
    bindsym p exec pavucontrol; mode "default"; exec dunstctl close
    bindsym q exec qbittorrent; mode "default"; exec dunstctl close
    bindsym s exec gnome-system-monitor; mode "default"; exec dunstctl close
    bindsym shift+b exec firefox; mode "default"; exec dunstctl close
    bindsym v exec $HOME/scripts/brave.sh; mode "default"; exec dunstctl close
    bindsym x exec firefox; mode "default"; exec dunstctl close

    bindsym Escape mode "default"; exec dunstctl close
    bindsym Return mode "default"; exec dunstctl close
}
#+end_src

* Status Bar:
** sway default
# Read `man 5 sway-bar` for more information about this section.
#+begin_src shell :tangle no
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %X'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}
#+end_src

** i3status-rs
Currently using i3status-rs, because i3blocks seems barely maintained anymore.

#+begin_src shell :tangle no

# Start i3bar to display a workspace bar (plus the system information i3status finds out, if available)
bar {
        # status_command i3status
        status_command i3status-rs ~/.config/i3status-rust/config.toml

        # just to demonstrate how the status bar works, see this little script, the output of which is put into the status bar
        # status_command ~/.config/i3/bar.sh
        #i3bar_command i3bar --transparency
        position top
        #background #00000000
        #statusline #ffffff
        #separator #666666

        # uses font and size defined at the beginning of this config, over overwrites with this line
        #font pango:System San Franciso Display 8
        #separator_symbol "---"
        # tray_output none
        #tray_output primary

        #workspace_buttons no
#        tray_padding 3

        font pango:HackNerdFont 9.0


        colors {

            # some polar night (greyish) color would look nice,
            # even better if it was a little transparent,
            # but the *tray icons* have a *black background*
            # that I dont know how to change :/
            #
            # lol now even w/o picom the black background is gone and its just the same color as the bar
        #background $polar1

        background $polar2
        # transpart background:
        # background    #A1000000
        # statusline #eeeeee
        separator  $polar4



        # colorclass           border  backgr. text
        focused_workspace     $polar3  $orange   $polar4
        active_workspace      $polar3  $polar1   $snow1
        inactive_workspace    $polar3  $polar1   $snow1
        urgent_workspace      $polar3  $red      $snow1
        }

    }


#+end_src


* GAPS
** global
#+begin_src shell
set $my-inner 10
gaps inner $my-inner
#+end_src

** per workspace
BASIC SYNTAX global or per workspace
~gaps [inner|outer|horizontal|vertical|top|left|bottom|right] <px>~
~workspace <ws> gaps [inner|outer|horizontal|vertical|top|left|bottom|right] <px>~

#+begin_src shell
# workspace $ws1 gaps horizontal 100
# workspace $ws1 gaps vertical   25
# workspace $ws1 gaps inner 10

#workspace $ws2 gaps horizontal 250
#workspace $ws2 gaps vertical   10

#workspace $ws3 gaps inner 25
#workspace $ws3 gaps horizontal 25
#workspace $ws3 gaps vertical   25
#+end_src

** manipulate gaps at runtime
Taken from the official i3-gaps repo: https://github.com/Airblader/i3/wiki/Example-Configuration

#+begin_src shell
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
#+end_src

* include
#+begin_src shell
#include /etc/sway/config.d/*
#+end_src
