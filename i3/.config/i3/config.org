#+TITLE: My i3 config
#+AUTHOR: Arthur Fleck
#+DESCRIPTION: AF's personal i3 config.
#+STARTUP: showeverything
#+OPTIONS: toc:2
#+PROPERTY: header-args:shell :tangle config

- If changes to PROPERTY line above, refresh local setup by pressing ~C-c C-c~ with the cursor being on the line with PROPERTY before exporting (tangling) this file
- ~Ctrl-U + Tab~ to cycle thru heading collaped state
- Fookeks vs ~Fookeks~
  
Export, e.g. to html, works when TOC is removed (sth with the links there makes it fail)

Find the default config template here:
~/etc/i3/config.keycodes~

* TABLE OF CONTENTS :toc:
- [[#top-of-file---info][Top of File - Info]]
- [[#basic-setup][Basic Setup]]
  - [[#mod-key][Mod Key]]
  - [[#floating-mod-key][Floating Mod Key]]
  - [[#font][Font]]
- [[#bar][bar]]
  - [[#i3status-rust][i3status-rust]]
- [[#binding-modes][Binding Modes]]
  - [[#resize][resize]]
  - [[#launch-applications-with-modo][LAUNCH APPLICATIONS with $mod+o]]
- [[#bindsym][bindsym]]
  - [[#basics][basics]]
  - [[#audio][audio]]
  - [[#dmenu][dmenu]]
  - [[#more-custom-ones][more custom ones]]
- [[#colors-and-ui][Colors and UI]]
  - [[#nord-colors][Nord Colors]]
  - [[#changing-colors][Changing Colors]]
  - [[#disable-title-bars][Disable Title Bars]]
  - [[#set-border-pixel-0-for-notifications-and-a-few-apps][Set ~border pixel 0~ for notifications (and a few apps)]]
  - [[#hide-borders-on-ws8][hide borders on $ws8]]
- [[#exec][exec]]
  - [[#default][default]]
  - [[#autostart--daemons][autostart / daemons]]
  - [[#more][more]]
  - [[#who-autostarts-those][who autostarts those?]]
  - [[#notifications][Notifications]]
  - [[#more-exec--exec-on-startup][more exec / exec on startup]]
  - [[#licht][licht]]
- [[#gaps][GAPS]]
  - [[#global][global]]
  - [[#per-workspace-settings][per workspace settings]]
  - [[#some-very-nice-keybindings-for-i3-gaps][Some very nice keybindings for i3-gaps.]]
- [[#workspaces][Workspaces]]
  - [[#define-workspaces][Define workspaces]]
  - [[#assign-to-ws][assign to ws]]
  - [[#switch-to-workspace][Switch to workspace]]
  - [[#move-focused-container-to-workspace][Move focused container to workspace]]
  - [[#back-and-forth][back and forth]]
  - [[#assign-workspace-to-a-specific-display][Assign workspace to a specific display]]
  - [[#panic-mode][Panic Mode]]
- [[#float-certain-windows][FLOAT CERTAIN WINDOWS]]

* Top of File - Info 
#+begin_src shell
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#
# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#+end_src



* Basic Setup
** Mod Key
Mod1 = alt left on Mac keyboard
Mod4 = cmd

#+begin_src shell
set $mod Mod4
#+end_src

** Floating Mod Key
Use Mouse+$mod to drag floating windows to their wanted position

#+begin_src shell
floating_modifier $mod
#+end_src

** Font
Font for window titles. Will also be used by the bar unless a different font
is used in the bar {} block below.

change font, theme etc for GTK apps with `lxappearance`. on first start change font size, 
now set font that's not in dropdown via newly created `gtkrc-2.0` file
also check: .config/gtk-3.0/settings.ini

#+begin_src shell
font pango:HackNerdFont 8
#+end_src


* bar 
Currently using i3status-rs, because i3blocks seems barely maintained anymore.

#+begin_src shell

# Start i3bar to display a workspace bar (plus the system information i3status finds out, if available)
bar {
        # status_command i3status
        status_command i3status-rs ~/.config/i3status-rust/config.toml

        # just to demonstrate how the status bar works, see this little script, the output of which is put into the status bar
        # status_command ~/.config/i3/bar.sh
        #i3bar_command i3bar --transparency
        position top
        #background #00000000
        #statusline #ffffff
        #separator #666666

        # uses font and size defined at the beginning of this config, over overwrites with this line
        #font pango:System San Franciso Display 8
        #separator_symbol "---"
        # tray_output none
        #tray_output primary

        #workspace_buttons no
#        tray_padding 3

        font pango:HackNerdFont 9.0


        colors {

            # some polar night (greyish) color would look nice,
            # even better if it was a little transparent,
            # but the *tray icons* have a *black background*
            # that I dont know how to change :/
            #
            # lol now even w/o picom the black background is gone and its just the same color as the bar
        #background $polar1

        background $polar2
        # transpart background:
        # background    #A1000000
        # statusline #eeeeee
        separator  $polar4



        # colorclass           border  backgr. text
        focused_workspace     $polar3  $orange   $polar4
        active_workspace      $polar3  $polar1   $snow1
        inactive_workspace    $polar3  $polar1   $snow1
        urgent_workspace      $polar3  $red      $snow1
        }

    }


#+end_src

#+RESULTS:

#+begin_src shell
# exec_always --no-startup-id $HOME/.config/polybar/launch.sh
#+end_src

** i3status-rust
https://github.com/greshake/i3status-rust

Installed w/ pacman -> maybe install some deps? TODO
Optional dependencies for i3status-rust
    alsa-utils: for the volume block
    bluez: for the bluetooth block [installed]
    fakeroot: for the pacman block to show pending updates [installed]
    kdeconnect: for the kdeconnect block
    powerline-fonts: for all themes using the Powerline arrow char
    pulseaudio: for the volume block [installed]
    speedtest-cli: for the speedtest block
    ttf-font-awesome: for the awesome icons
    upower: for the battery block [installed]

* Binding Modes
** resize
resize window (you can also use the mouse for that)

#+begin_src shell
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym odiaeresis resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
#+end_src

** LAUNCH APPLICATIONS with $mod+o
Launch (a few select) applications faster than with dmenu.
About modes: https://i3wm.org/docs/userguide.html#binding_modes

The reason for using ~emacsclient~, as far as I have learned, is simply speed.

#+begin_src shell
set $mode_launcher Launch: [a]ppfinder [b]luetooth [B]rowser [e]macs [f]ile-manager [s]ystem-monitor
bindsym $mod+o mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym a exec xfce4-appfinder; mode "default"
    bindsym b exec blueman-manager; mode "default"
    bindsym shift+b exec firefox; mode "default"
    bindsym e exec emacsclient --create-frame --alternate-editor="vim"; mode "default"
    bindsym f exec thunar; mode "default"
    bindsym s exec gnome-system-monitor; mode "default"

    bindsym Escape mode "default"
    bindsym Return mode "default"
}
#+end_src

* bindsym
** basics
I almost had to hard reboot a new installation because kitty was missing and I thought the keybindings didn't work.

Use ~i3-sensible-terminal~ as default, not a specific terminal. 

It tries to start one of the following (in that order):
•$TERMINAL (this is a non-standard variable)
•x-terminal-emulator (only present on Debian and derivatives)
•mate-terminal
•gnome-terminal
•terminator
•xfce4-terminal
• and many more, see ~man i3-sensible-terminal~

#+begin_src shell

# start a terminal
# flavor of the month :) 
bindsym $mod+Return exec alacritty
# fallback
bindsym $mod+Shift+Return exec i3-sensible-terminal

# kill focused window
 # TODO testing mod+q
bindsym $mod+q kill
bindsym $mod+Shift+q kill

# start dmenu (a program launcher) OR rofi
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop 
bindsym $mod+shift+d exec --no-startup-id dmenu_run -l 25
bindsym $mod+Tab exec --no-startup-id rofi -show combi

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+z split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
bindsym $mod+c focus child

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

#+end_src

** audio
https://faq.i3wm.org/question/3747/enabling-multimedia-keys/?answer=3759#post-id-3759
https://askubuntu.com/questions/794403/media-keys-on-macbook-pro-and-i3

#+begin_src shell

# Use pactl to adjust volume in PulseAudio.
#set $refresh_i3status killall -SIGUSR1 i3status
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

## Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle
#
## Sreen brightness controls
# bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
# bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness
#
## Touchpad controls
#bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad
#
## Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
#bindsym XF86AudioPause exec playerctl pause
#bindsym XF86AudioNext exec playerctl next
#bindsym XF86AudioPrev exec playerctl previous

#+end_src


** dmenu 
scripts using dmenu for user interaction

#+begin_src shell
bindsym $mod+a      exec "~/code/scripts/bb/src/search.clj --select-provider"
bindsym $mod+i      exec "~/code/scripts/bb/src/run_script.clj"
bindsym $mod+g      exec "~/code/scripts/bb/src/search.clj"
bindsym $mod+Mod1+c exec "~/code/scripts/bb/src/edit_configs.clj"
bindsym $mod+Mod1+e exec "~/.config/i3/dmenuunicode"
bindsym $mod+Mod1+l exec "/usr/local/bin/licht"
#+end_src

** more custom ones
TODO: why isn't "RECOMMENDED USAGE: xss-lock --transfer-sleep-lock -- i3lock --nofork" working?

TODO: sleep x minutes after locking screen

#+begin_src shell
# "kill" notifications
bindsym $mod+Mod1+k exec "dunstctl close-all"

bindsym $mod+Mod1+x exec i3lock --color 000000 --show-failed-attempts
bindsym $mod+Shift+x exec i3lock --color 000000 --show-failed-attempts && systemctl suspend

# panic mode step 2 - bindsym:
# bindsym $mod+Shift+h exec "i3-msg workspace 100 && i3-msg workspace 101"

# Launch "music workspace" $ws8
bindsym $mod+Shift+m exec "~/.config/i3/make-ws8.sh"

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# toggles moving a workspace to the upper/lower monitor
# move workspace to output left|right|down|up|current|primary|nonprimary|next|<output1> [output2]…
bindsym $mod+m move workspace to output down
#+end_src

* Colors and UI
** Nord Colors
https://www.nordtheme.com/docs/colors-and-palettes

#+begin_src shell
# Nord Polar Night
set $polar1 #2e3440
set $polar2 #3b4252
set $polar3 #434c5e
set $polar4 #4c566a

# Nord Snow Storm
set $snow1 #d8dee9
set $snow2 #e5e9f0
set $snow3 #eceff4

# Nord Frost
set $frost1 #8fbcbb
set $frost2 #88c0d0
set $frost3 #81a1c1
set $frost4 #5e81ac

# Nord Aurora
set $red    #bf616a
set $orange #d08770
set $yellow #ebcb8b
set $green  #a3be8c
set $lila   #b48ead
#+end_src

** Changing Colors
Other than ~client.focused~, all values are the default ones.

#+begin_src shell

# class                 border  backgr. text    indicator child_border
client.focused          $polar1 $orange $polar4 $orange   $orange
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff


# default colors for reference
# ----------------------------

# # class                 border  backgr. text    indicator child_border
# client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
# client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
# client.unfocused        #333333 #222222 #888888 #292d2e   #222222
# client.urgent           #2f343a #900000 #ffffff #900000   #900000
# client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
# 
# client.background       #ffffff

#+end_src

** Disable Title Bars
Setting border style to pixel eliminates title bars. See https://i3wm.org/docs/userguide.html#default_border

#+begin_src shell

# hide title bar for all windows
# for_window [class="^.*"] border pixel 1

# other options: class, title, window_role
# also combine e.g. [class="..." title="..."]
# for_window [class="firefox"] border pixel 1

# should hide/remove title bar
#default_border pixel 2
#default_floating_border pixel 1

# looks like this draws a border around windows like "Gnome System Monitor"
# that with simply "default_border pixel 2" don't have a border drawn around 'em

# with picom rounded corners enabled, border pixel 0 looks best 
for_window [class=".*"] border pixel 2

#+end_src

** Set ~border pixel 0~ for notifications (and a few apps)
scratchpad-like-apps via ~super+o~ might look better without border

#+begin_src shell
for_window [class="Xfce4-notifyd"] border pixel 0
for_window [class="io.github.celluloid_player.Celluloid"] border pixel 0
#for_window [class="Xfce4-appfinder"] border pixel 0
#for_window [class="Blueman-manager"] border pixel 0
#+end_src

** hide borders on $ws8
Hide window title bar for all kitty instances on $ws8.

#+begin_src shell
for_window [instance="kitty1"] border pixel 1
for_window [instance="kitty2"] border pixel 1
for_window [instance="kitty3"] border pixel 1
for_window [instance="kitty4"] border pixel 1
for_window [instance="kittyX"] border pixel 1
#+end_src

* exec
~exec~ executes on login
~exec_always~ also executes on reload


** default
#+begin_src shell

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
# TODO not installed by default on arch
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# TODO not installed by default on arch
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet
exec --no-startup-id blueman-applet
exec --no-startup-id megasync

# TODO exec --no-startup-id lxsession

# Running an XSETTINGS daemon is necessary for some applications to use the selected GTK theme, cursor, font, and other settings.
# -- but it messes with themes / icons previously set in lxappearance (without - after a first quick look - improving anything or finally theming KeepassXC)
#exec --no-startup-id xfsettingsd
# can be Authentication agent than the gnome one (see arch wiki), but w/o one, e.g. GParted won't start using dmenu (only via sudo gparted from terminal)
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
#+end_src

** autostart / daemons

*** emacs daemon / server
#+begin_src shell
exec --no-startup-id emacs --daemon
#+end_src

*** compositor
picom produces some weird artifacts atm on the MBP, so this might be commented out
**but** picom also gets rid of ugly stuff, e.g. compare RightClick/ContextMenu in FireFox with/without picom enabled (empty ~/.config/picom/picom.conf),
not the default one, which adds to much stuff
#+begin_src shell
exec --no-startup-id picom
#+end_src

*** syncthing
#+begin_src shell
exec --no-startup-id /usr/bin/syncthing
#+end_src

** more
~xprop | grep -i class~ returns ~WM_CLASS(STRING) = instance,class~
e.g. ~WM_CLASS(STRING) = "kitty1", "kitty"~

#+begin_src shell

# TODO not yet installed on arch / locks when playing movie, figure out better solution
exec_always xautolock -time 20 -locker '~/.config/i3/block.sh' &

# in ~xfce4-power-manager-settings~ (GUI), enabled ~handle display brightness keys~, 
# and with exec here, and after restart, those keys *finally* work
exec_always --no-startup-id xfce4-power-manager


#+end_src

** who autostarts those?
With the gnome keyring installed and its daemon running, Thunar mounting the encrypted drive no longer produces the missing keyring message.

What else to start? compare eg https://youtu.be/FX26s8INUYo?feature=shared&t=296

ok the ~gnome-keyring-daemon~ must get started by another thing, if I kill it, it gets tarted again almost instantly
#+begin_src shell
# TODO check if this gets started by some other part of the system, w/o here
# like this, causes i3 config error
#/usr/bin/gnome-keyring-daemon
#+end_src

#+begin_src shell :tangle no
# already running, and not sure what exactly *to exec*
# exec xfce4-notifyd

#+end_src


** Notifications 
To send a notificatin e.g. using ~notify-send~, a notification server/daemon has to be up and running.
https://wiki.archlinux.org/title/Desktop_notifications#Notification_servers

Currently using ~xfce4-notifyd~, its decent, also currently learning *what even makes a Desktop Enviroment*,
which looking at all the individual apps/daemons/etc that make XFCE, is a pretty nice learning experience.
To configure the XFCE one, use ~xfce4-notifyd-config~ (a GUI), which is pretty nice,
since it can configure stuff on a **per app basis**.

~dunst~ would be another option, supposedly a lightweight one.

** more exec / exec on startup
#+begin_src shell
# TODO set via dmenu script
#arandr-config-macbook-screen-only.sh
exec_always $HOME/.screenlayout/arandr-config-viewsonic.sh
#exec_always $HOME/.screenlayout/arandr-config-lg-ultrawide.sh

exec_always set_random_wallpaper
#exec "kitty --name kitty0"
exec "alacritty --name alacritty0"

#+end_src

** licht
Set light to "hi" (high) for both the internal and external screen.

#+begin_src shell
exec /usr/local/bin/licht hi
#+end_src


* GAPS
** global
#+begin_src shell
set $my-inner 10
gaps inner $my-inner
#+end_src

** per workspace settings
BASIC SYNTAX global or per workspace
~gaps [inner|outer|horizontal|vertical|top|left|bottom|right] <px>~
~workspace <ws> gaps [inner|outer|horizontal|vertical|top|left|bottom|right] <px>~

#+begin_src shell

# workspace $ws1 gaps horizontal 100
# workspace $ws1 gaps vertical   25
# workspace $ws1 gaps inner 10

#workspace $ws2 gaps horizontal 100
#workspace $ws2 gaps vertical   25

#workspace $ws3 gaps inner 25
#workspace $ws3 gaps horizontal 25
#workspace $ws3 gaps vertical   25
#+end_src

** Some very nice keybindings for i3-gaps.
#+begin_src shell


# **************************************************************************************************
# interactive gaps (https://github.com/Airblader/i3/wiki/Example-Configuration)
# **************************************************************************************************
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
# **************************************************************************************************
# end of interactive gaps code
# **************************************************************************************************

#+end_src

* Workspaces

** Define workspaces
Define names for default workspaces for which we configure key bindings later on.
We use variables to avoid repeating the names in multiple places.

[[https://www.nerdfonts.com/cheat-sheet][Icons Cheat Sheet]]

#+begin_src shell
set $ws1 "1 󰆍 "
set $ws2 "2  "
set $ws3 "3  "
set $ws4 "4 󰘧 "
set $ws5 " 5 "
set $ws6 " 6 "
set $ws7 " 7 "
set $ws8 "8  "
set $ws9 "9   "
set $ws10 "10   "
#+end_src

** assign to ws
To find out the class name of an application: `xprop` -> enter -> click app -> under `WM_CLASS(STRING)` it's the last value

#+begin_src shell
assign [class="firefox"] $ws2
assign [class="jetbrains-rustrover"] $ws4
assign [class="KeePassXC"] $ws10
assign [instance="^kitty0$"] $ws1
assign [instance="^alacritty0$"] $ws1
assign [instance="^kitty1$"] $ws8
assign [instance="^kitty2$"] $ws8
assign [instance="^kitty3$"] $ws8
assign [instance="^kitty4$"] $ws8

# TODO mv musik to another ws
assign [class="Gnome-boxes"] $ws8
# just changed its class name .. why?!
assign [class="Org.gnome.Boxes"] $ws8
#+end_src


** Switch to workspace
#+begin_src shell
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
#+end_src

** Move focused container to workspace
#+begin_src shell
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
#+end_src

** back and forth
auto back/forth example:
For instance: Assume you are on workspace "1: www" and switch to "2: IM" using mod+2 because somebody sent you a message. You don’t need to remember where you came from now, you can just press $mod+2 again to switch back to "1: www".

#+begin_src shell
workspace_auto_back_and_forth yes

bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth
#+end_src

** Assign workspace to a specific display
Use ~xrandr --listmonitors~ to get the monitor names.

#+begin_src shell
workspace $ws1 output eDP-1
#workspace $ws8 output eDP-1

#+end_src

** Panic Mode
#+begin_src shell
# panic mode step 1: assign a never-in-use workspace for each display
# workspace 100 output eDP-1
# workspace 101 output HDMI-2
#+end_src

* FLOAT CERTAIN WINDOWS
# enable floating mode for all XTerm windows
for_window [class="XTerm"] floating enable

# Make all urxvts use a 1-pixel border:
for_window [class="urxvt"] border pixel 1

# A less useful, but rather funny example:
# makes the window floating as soon as I change
# directory to ~/work
for_window [title="x200: ~/work"] floating enable

# Move floating container to the center of all outputs -> not what I wanted :)
bindsym $mod+c move absolute position center
# ok
for_window [class="Blueman-manager"] move position mouse

# EXAMPLE how to combine stuff
#for_window [title="Error" class="Lxpolkit"] kill; floating enable; border none 


#+begin_src shell
for_window [class="Xfce4-appfinder"] floating enable
#for_window [class="Xfce4-appfinder"] border pixel 5
for_window [class="Xfce4-appfinder"] resize set 640 480
for_window [class="Xfce4-appfinder"] move position center

for_window [class="Xfce4-about"] floating enable
for_window [class="Xfce4-about"] resize set 640 480
for_window [class="Xfce4-about"] move position center

for_window [class="Blueman-manager"] floating enable
for_window [class="Blueman-manager"] resize set 640 480
for_window [class="Blueman-manager"] move position center

for_window [title="About Mozilla Firefox"] floating enable

for_window [class="Pavucontrol"] floating enable
for_window [class="Pavucontrol"] resize set 800 640
for_window [class="Pavucontrol"] move position center
#WM_CLASS(STRING) = "pavucontrol", "Pavucontrol"

#+end_src

