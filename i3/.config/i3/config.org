#+TITLE: My i3 config
#+AUTHOR: Arthur Fleck
#+DESCRIPTION: AF's personal i3 config.
#+STARTUP: showeverything
#+OPTIONS: toc:2
#+PROPERTY: header-args:shell :tangle config

- If changes to PROPERTY line above, refresh local setup by pressing ~C-c C-c~ with the cursor being on the line with PROPERTY before exporting (tangling) this file
- ~Ctrl-U + Tab~ to cycle thru heading collaped state
- Fookeks vs ~Fookeks~
  
Export, e.g. to html, works when TOC is removed (sth with the links there makes it fail)
  
Find the default config template here:
~/etc/i3/config.keycodes~

* TABLE OF CONTENTS :toc:
- [[#top-of-file---info][Top of File - Info]]
- [[#assign][assign]]
- [[#basic-setup][Basic Setup]]
  - [[#mod-key][Mod Key]]
  - [[#floating-mod-key][Floating Mod Key]]
  - [[#font][Font]]
- [[#bar][bar]]
- [[#binding-modes][Binding Modes]]
  - [[#resize][resize]]
  - [[#launch-applications-with-modo][launch applications with $mod+o]]
- [[#bindsym][bindsym]]
  - [[#basics][basics]]
  - [[#audio][audio]]
  - [[#dmenu][dmenu]]
  - [[#emacs-client][emacs client]]
  - [[#more-custom-ones][more custom ones]]
- [[#colors-and-ui][Colors and UI]]
  - [[#nord-colors][Nord Colors]]
  - [[#changing-colors][Changing Colors]]
  - [[#disable-title-bars][Disable Title Bars]]
  - [[#hide-borders-on-ws8][hide borders on $ws8]]
- [[#exec][exec]]
  - [[#default][default]]
  - [[#more][more]]
  - [[#licht][licht]]
  - [[#emacs-daemon--server][emacs daemon / server]]
- [[#gaps][GAPS]]
- [[#workspaces][Workspaces]]
  - [[#define-workspaces][Define workspaces]]
  - [[#switch-to-workspace][Switch to workspace]]
  - [[#move-focused-container-to-workspace][Move focused container to workspace]]
  - [[#assign-workspace-to-a-specific-display][Assign workspace to a specific display]]
  - [[#panic-mode][Panic Mode]]
- [[#stuff-that-was-commented-out][Stuff that was commented out]]
  - [[#fonts][fonts]]

* Top of File - Info 
#+begin_src shell
# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#
# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#+end_src


* assign
To find out the class name of an application: `xprop` -> enter -> click app -> under `WM_CLASS(STRING)` it's the last value

#+begin_src shell
assign [class="firefox"] $ws2
assign [class="jetbrains-rustrover"] $ws4
assign [instance="^kitty0$"] $ws1
assign [instance="^kitty1$"] $ws8
assign [instance="^kitty2$"] $ws8
assign [instance="^kitty3$"] $ws8
assign [instance="^kitty4$"] $ws8
#+end_src

* Basic Setup
** Mod Key
Mod1 = alt left on Mac keyboard
Mod4 = cmd

#+begin_src shell
set $mod Mod4
#+end_src

** Floating Mod Key
Use Mouse+$mod to drag floating windows to their wanted position

#+begin_src shell
floating_modifier $mod
#+end_src

** Font
Font for window titles. Will also be used by the bar unless a different font
is used in the bar {} block below.


change font, theme etc for GTK apps with `lxappearance`. on first start change font size, 
now set font that's not in dropdown via newly created `gtkrc-2.0` file
also check: .config/gtk-3.0/settings.ini

#+begin_src shell
#font pango:monospace 8
font pango:System San Franciso Display 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8
#+end_src


* bar 
Currently using i3status-rs, because i3blocks seems barely maintained anymore.

#+begin_src shell

# Start i3bar to display a workspace bar (plus the system information i3status finds out, if available)
bar {
        #status_command i3blocks -c ~/.config/i3/i3blocks.conf
        status_command ~/.cargo/bin/i3status-rs ~/.config/i3status-rust/config.toml
        # status_command i3status

        # just to demonstrate how the status bar works, see this little script, the output of which is put into the status bar
        # status_command ~/.config/i3/bar.sh

        position top

        # uses font and size defined at the beginning of this config, over overwrites with this line
        #font pango:System San Franciso Display 8
        #separator_symbol "---"

        #colors {
		#        background $bg-color
	    #	    separator #757575
		#        #                  border             background         text
		#        focused_workspace  $bg-color          $bg-color          $text-color
		#        inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
		#        urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
	    #}
}

#+end_src

* Binding Modes
** resize
resize window (you can also use the mouse for that)

#+begin_src shell
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym odiaeresis resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
#+end_src

** launch applications with $mod+o
Launch (a few select) applications faster than with dmenu.
About modes: https://i3wm.org/docs/userguide.html#binding_modes

#+begin_src shell
set $mode_launcher Launch: [b]lueman [f]irefox
bindsym $mod+o mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym b exec blueman-manager; mode "default"
    bindsym f exec firefox; mode "default"

    bindsym Escape mode "default"
    bindsym Return mode "default"
}
#+end_src

* bindsym
** basics
#+begin_src shell

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
#bindsym $mod+Return exec gnome-terminal --hide-menubar
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher) OR rofi
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop 
bindsym $mod+shift+d exec --no-startup-id dmenu_run -l 25
bindsym $mod+Tab exec --no-startup-id rofi -show combi

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+odiaeresis move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+z split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
bindsym $mod+c focus child

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

#+end_src

** audio
https://faq.i3wm.org/question/3747/enabling-multimedia-keys/?answer=3759#post-id-3759
https://askubuntu.com/questions/794403/media-keys-on-macbook-pro-and-i3

#+begin_src shell

# Use pactl to adjust volume in PulseAudio.
#set $refresh_i3status killall -SIGUSR1 i3status
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

## Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle
#
## Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness
#
## Touchpad controls
#bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad
#
## Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
#bindsym XF86AudioPause exec playerctl pause
#bindsym XF86AudioNext exec playerctl next
#bindsym XF86AudioPrev exec playerctl previous

#+end_src


** dmenu 
scripts using dmenu for user interaction

#+begin_src shell
bindsym $mod+a      exec "~/code/scripts/bb/src/search.clj --select-provider"
bindsym $mod+i      exec "~/code/scripts/bb/src/run_script.clj"
bindsym $mod+g      exec "~/code/scripts/bb/src/search.clj"
bindsym $mod+Mod1+c exec "~/code/scripts/bb/src/edit_configs.clj"
bindsym $mod+Mod1+e exec "~/.config/i3/dmenuunicode"
bindsym $mod+Mod1+l exec "/usr/local/bin/licht"
#+end_src

** emacs client
The reason for using ~emacsclient~, as far as I have learned, is simply speed.

#+begin_src shell
bindsym $mod+m exec emacsclient --create-frame --alternate-editor=""
#+end_src

** more custom ones
TODO: why isn't "RECOMMENDED USAGE: xss-lock --transfer-sleep-lock -- i3lock --nofork" working?

TODO: sleep x minutes after locking screen

#+begin_src shell
# "kill" notifications
bindsym $mod+Mod1+k exec "dunstctl close-all"

bindsym $mod+Mod1+x exec i3lock --color 000000 --show-failed-attempts
bindsym $mod+Shift+x exec i3lock --color 000000 --show-failed-attempts && systemctl suspend

# panic mode step 2 - bindsym:
bindsym $mod+Shift+h exec "i3-msg workspace 100 && i3-msg workspace 101"

# Launch "music workspace" $ws8
bindsym $mod+Shift+m exec "~/.config/i3/make-ws8.sh"

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show
#+end_src

* Colors and UI
** Nord Colors
#+begin_src shell
# Nord Polar Night
set $polar1 #2e3440
set $polar2 #3b4252
set $polar3 #434c5e
set $polar4 #4c566a

# Nord Snow Storm
set $snow1 #d8dee9
set $snow2 #e5e9f0
set $snow3 #eceff4

# Nord Frost
set $frost1 #8fbcbb
set $frost2 #88c0d0
set $frost3 #81a1c1
set $frost4 #5e81ac

# Nord Aurora
set $red    #bf616a
set $orange #d08770
set $yellow #ebcb8b
set $green  #a3be8c
set $lila   #b48ead
#+end_src

** Changing Colors
Other than ~client.focused~, all values are the default ones.

#+begin_src shell

# class                 border  backgr. text    indicator child_border
client.focused          $polar1 $orange $polar4 $red      $orange
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff


# default colors for reference
# ----------------------------

# # class                 border  backgr. text    indicator child_border
# client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
# client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
# client.unfocused        #333333 #222222 #888888 #292d2e   #222222
# client.urgent           #2f343a #900000 #ffffff #900000   #900000
# client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
# 
# client.background       #ffffff

#+end_src

** Disable Title Bars
Setting border style to pixel eliminates title bars. See https://i3wm.org/docs/userguide.html#default_border

#+begin_src shell

# hide title bar for all windows
# for_window [class="^.*"] border pixel 1

# other options: class, title, window_role
# also combine e.g. [class="..." title="..."]
# for_window [class="firefox"] border pixel 1

# should hide/remove title bar
#default_border pixel 2
#default_floating_border pixel 1

# looks like this draws a border around windows like "Gnome System Monitor"
# that with simply "default_border pixel 2" don't have a border drawn around 'em
for_window [class=".*"] border pixel 3

#+end_src

** hide borders on $ws8
Hide window title bar for all kitty instances on $ws8.

#+begin_src shell
for_window [instance="kitty1"] border pixel 1
for_window [instance="kitty2"] border pixel 1
for_window [instance="kitty3"] border pixel 1
for_window [instance="kitty4"] border pixel 1
for_window [instance="kittyX"] border pixel 1
#+end_src

* exec
~exec~ executes on login
~exec_always~ also executes on reload


** default
#+begin_src shell

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

#+end_src

** more
~xprop | grep -i class~ returns ~WM_CLASS(STRING) = instance,class~
e.g. ~WM_CLASS(STRING) = "kitty1", "kitty"~

#+begin_src shell

# TODO locks when playing movie, figure out better solution
exec_always xautolock -time 20 -locker '~/.config/i3/block.sh' &

# TODO set via dmenu script
#arandr-config-macbook-screen-only.sh
exec_always $HOME/.screenlayout/arandr-config-viewsonic.sh
#exec_always $HOME/.screenlayout/arandr-config-lg-ultrawide.sh

exec_always set_random_wallpaper
exec "kitty --name kitty0"

#+end_src

** licht
Set light to "hi" (high) for both the internal and external screen.

#+begin_src shell
exec /usr/local/bin/licht hi
#+end_src

** emacs daemon / server
#+begin_src shell
exec --no-startup-id emacs --daemon
#+end_src

* GAPS
Some very nice keybindings for i3-gaps.

#+begin_src shell

# BASIC SYNTAX global or per workspace
#
# gaps [inner|outer|horizontal|vertical|top|left|bottom|right] <px>
# workspace <ws> gaps [inner|outer|horizontal|vertical|top|left|bottom|right] <px>
#
# workspace $ws2 gaps left 20
# workspace $ws2 gaps right 20
# workspace $ws2 gaps top 10
# workspace $ws2 gaps bottom 10
# workspace $ws2 gaps inner 10
# workspace $ws2 gaps horizontal 10
# workspace $ws2 gaps vertical   10

# **************************************************************************************************
# interactive gaps (https://github.com/Airblader/i3/wiki/Example-Configuration)
# **************************************************************************************************
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
# **************************************************************************************************
# end of interactive gaps code
# **************************************************************************************************

#+end_src

* Workspaces
** Define workspaces
Define names for default workspaces for which we configure key bindings later on.
We use variables to avoid repeating the names in multiple places.
#+begin_src shell
set $ws1 "1 "
set $ws2 "2 "
set $ws3 "3 λ"
set $ws4 "4 🦀"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7 🏴‍☠️"
set $ws8 "8 ♫"
set $ws9 "9"
set $ws10 "10"
#+end_src

** Switch to workspace
#+begin_src shell
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
#+end_src

** Move focused container to workspace
#+begin_src shell
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
#+end_src

** Assign workspace to a specific display
Use ~xrandr --listmonitors~ to get the monitor names.

#+begin_src shell
workspace $ws1 output eDP-1
workspace $ws8 output eDP-1
#+end_src

** Panic Mode
#+begin_src shell
# panic mode step 1: assign a never-in-use workspace for each display
workspace 100 output eDP-1
workspace 101 output HDMI-2
#+end_src

* Stuff that was commented out
** fonts
1) download zip file of release for desktop: https://github.com/FortAwesome/Font-Awesome
   I used the latest v5, because I didnt find an official cheatsheet to copy the icons from for v6
2) mkdir ~/.fonts
3) cp the following files into ~/.fonts
	'Font Awesome 6 Brands-Regular-400.otf'  
	'Font Awesome 6 Free-Solid-900.otf'
	'Font Awesome 6 Free-Regular-400.otf

--------------------------------------------
https://www.youtube.com/watch?v=ARKIwOlazKI
part 3/3 -> how to "rice" your desktop (fonts, window colors, rofi (which is easier to customize and style) instead of dmenu, status bar: i3block instead of i3status, animations on ws change)
install compton --> exec compton <-- transparent window backgorund and fade effect, e.g. for rofi

